//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ReportsSoap", Namespace="http://tempuri.org/")]
public partial class Reports : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback TimeSheet_OpenListOperationCompleted;
    
    private System.Threading.SendOrPostCallback TimeSheet_AllOperationCompleted;
    
    private System.Threading.SendOrPostCallback TimeSheet_MissingOperationCompleted;
    
    private System.Threading.SendOrPostCallback VAS_GeneralJournalReportOperationCompleted;
    
    /// <remarks/>
    public Reports()
    {
        String urlSetting = System.Configuration.ConfigurationManager.AppSettings["ReportsWSURL"];
        if (String.IsNullOrEmpty(urlSetting))
            this.Url = "http://demo1.w4vn.com/GetDefault.asmx";
        else
            this.Url = urlSetting;
    }
    
    /// <remarks/>
    public event TimeSheet_OpenListCompletedEventHandler TimeSheet_OpenListCompleted;
    
    /// <remarks/>
    public event TimeSheet_AllCompletedEventHandler TimeSheet_AllCompleted;
    
    /// <remarks/>
    public event TimeSheet_MissingCompletedEventHandler TimeSheet_MissingCompleted;
    
    /// <remarks/>
    public event VAS_GeneralJournalReportCompletedEventHandler VAS_GeneralJournalReportCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TimeSheet_OpenList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet TimeSheet_OpenList(string UserID, System.DateTime FromDate, System.DateTime ToDate) {
        object[] results = this.Invoke("TimeSheet_OpenList", new object[] {
                    UserID,
                    FromDate,
                    ToDate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTimeSheet_OpenList(string UserID, System.DateTime FromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TimeSheet_OpenList", new object[] {
                    UserID,
                    FromDate,
                    ToDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndTimeSheet_OpenList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void TimeSheet_OpenListAsync(string UserID, System.DateTime FromDate, System.DateTime ToDate) {
        this.TimeSheet_OpenListAsync(UserID, FromDate, ToDate, null);
    }
    
    /// <remarks/>
    public void TimeSheet_OpenListAsync(string UserID, System.DateTime FromDate, System.DateTime ToDate, object userState) {
        if ((this.TimeSheet_OpenListOperationCompleted == null)) {
            this.TimeSheet_OpenListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimeSheet_OpenListOperationCompleted);
        }
        this.InvokeAsync("TimeSheet_OpenList", new object[] {
                    UserID,
                    FromDate,
                    ToDate}, this.TimeSheet_OpenListOperationCompleted, userState);
    }
    
    private void OnTimeSheet_OpenListOperationCompleted(object arg) {
        if ((this.TimeSheet_OpenListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TimeSheet_OpenListCompleted(this, new TimeSheet_OpenListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TimeSheet_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet TimeSheet_All(string UserID, System.DateTime FromDate, System.DateTime ToDate) {
        object[] results = this.Invoke("TimeSheet_All", new object[] {
                    UserID,
                    FromDate,
                    ToDate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTimeSheet_All(string UserID, System.DateTime FromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TimeSheet_All", new object[] {
                    UserID,
                    FromDate,
                    ToDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndTimeSheet_All(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void TimeSheet_AllAsync(string UserID, System.DateTime FromDate, System.DateTime ToDate) {
        this.TimeSheet_AllAsync(UserID, FromDate, ToDate, null);
    }
    
    /// <remarks/>
    public void TimeSheet_AllAsync(string UserID, System.DateTime FromDate, System.DateTime ToDate, object userState) {
        if ((this.TimeSheet_AllOperationCompleted == null)) {
            this.TimeSheet_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimeSheet_AllOperationCompleted);
        }
        this.InvokeAsync("TimeSheet_All", new object[] {
                    UserID,
                    FromDate,
                    ToDate}, this.TimeSheet_AllOperationCompleted, userState);
    }
    
    private void OnTimeSheet_AllOperationCompleted(object arg) {
        if ((this.TimeSheet_AllCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TimeSheet_AllCompleted(this, new TimeSheet_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TimeSheet_Missing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet TimeSheet_Missing(string UserID, System.DateTime FromDate, System.DateTime ToDate, bool FilterByUser) {
        object[] results = this.Invoke("TimeSheet_Missing", new object[] {
                    UserID,
                    FromDate,
                    ToDate,
                    FilterByUser});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTimeSheet_Missing(string UserID, System.DateTime FromDate, System.DateTime ToDate, bool FilterByUser, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TimeSheet_Missing", new object[] {
                    UserID,
                    FromDate,
                    ToDate,
                    FilterByUser}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndTimeSheet_Missing(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void TimeSheet_MissingAsync(string UserID, System.DateTime FromDate, System.DateTime ToDate, bool FilterByUser) {
        this.TimeSheet_MissingAsync(UserID, FromDate, ToDate, FilterByUser, null);
    }
    
    /// <remarks/>
    public void TimeSheet_MissingAsync(string UserID, System.DateTime FromDate, System.DateTime ToDate, bool FilterByUser, object userState) {
        if ((this.TimeSheet_MissingOperationCompleted == null)) {
            this.TimeSheet_MissingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimeSheet_MissingOperationCompleted);
        }
        this.InvokeAsync("TimeSheet_Missing", new object[] {
                    UserID,
                    FromDate,
                    ToDate,
                    FilterByUser}, this.TimeSheet_MissingOperationCompleted, userState);
    }
    
    private void OnTimeSheet_MissingOperationCompleted(object arg) {
        if ((this.TimeSheet_MissingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TimeSheet_MissingCompleted(this, new TimeSheet_MissingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VAS_GeneralJournalReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet VAS_GeneralJournalReport(string UserID, System.DateTime FromDate, System.DateTime ToDate) {
        object[] results = this.Invoke("VAS_GeneralJournalReport", new object[] {
                    UserID,
                    FromDate,
                    ToDate});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginVAS_GeneralJournalReport(string UserID, System.DateTime FromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("VAS_GeneralJournalReport", new object[] {
                    UserID,
                    FromDate,
                    ToDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndVAS_GeneralJournalReport(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void VAS_GeneralJournalReportAsync(string UserID, System.DateTime FromDate, System.DateTime ToDate) {
        this.VAS_GeneralJournalReportAsync(UserID, FromDate, ToDate, null);
    }
    
    /// <remarks/>
    public void VAS_GeneralJournalReportAsync(string UserID, System.DateTime FromDate, System.DateTime ToDate, object userState) {
        if ((this.VAS_GeneralJournalReportOperationCompleted == null)) {
            this.VAS_GeneralJournalReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVAS_GeneralJournalReportOperationCompleted);
        }
        this.InvokeAsync("VAS_GeneralJournalReport", new object[] {
                    UserID,
                    FromDate,
                    ToDate}, this.VAS_GeneralJournalReportOperationCompleted, userState);
    }
    
    private void OnVAS_GeneralJournalReportOperationCompleted(object arg) {
        if ((this.VAS_GeneralJournalReportCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.VAS_GeneralJournalReportCompleted(this, new VAS_GeneralJournalReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void TimeSheet_OpenListCompletedEventHandler(object sender, TimeSheet_OpenListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TimeSheet_OpenListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TimeSheet_OpenListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void TimeSheet_AllCompletedEventHandler(object sender, TimeSheet_AllCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TimeSheet_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TimeSheet_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void TimeSheet_MissingCompletedEventHandler(object sender, TimeSheet_MissingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TimeSheet_MissingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TimeSheet_MissingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void VAS_GeneralJournalReportCompletedEventHandler(object sender, VAS_GeneralJournalReportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class VAS_GeneralJournalReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal VAS_GeneralJournalReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}
