//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace SAP.WebServices
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "TransactionSoap", Namespace = "http://tempuri.org/")]
    public partial class Transaction : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback CreateMarketingDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback GetMarketingDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback GetMarketingDocument_ReturnDSOperationCompleted;

        /// <remarks/>
        public Transaction()
        {
            String urlSetting = System.Configuration.ConfigurationManager.AppSettings["TransactionWSURL"];
            if (String.IsNullOrEmpty(urlSetting))
                this.Url = "http://localhost:49881/Transaction.asmx";
            else
                this.Url = urlSetting;
        }

        /// <remarks/>
        public event CreateMarketingDocumentCompletedEventHandler CreateMarketingDocumentCompleted;

        /// <remarks/>
        public event GetMarketingDocumentCompletedEventHandler GetMarketingDocumentCompleted;

        /// <remarks/>
        public event GetMarketingDocument_ReturnDSCompletedEventHandler GetMarketingDocument_ReturnDSCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMarketingDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CreateMarketingDocument(string strXml, string UserID, string DocType, string Key, bool IsUpdate)
        {
            object[] results = this.Invoke("CreateMarketingDocument", new object[] {
                    strXml,
                    UserID,
                    DocType,
                    Key,
                    IsUpdate});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCreateMarketingDocument(string strXml, string UserID, string DocType, string Key, bool IsUpdate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateMarketingDocument", new object[] {
                    strXml,
                    UserID,
                    DocType,
                    Key,
                    IsUpdate}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet EndCreateMarketingDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void CreateMarketingDocumentAsync(string strXml, string UserID, string DocType, string Key, bool IsUpdate)
        {
            this.CreateMarketingDocumentAsync(strXml, UserID, DocType, Key, IsUpdate, null);
        }

        /// <remarks/>
        public void CreateMarketingDocumentAsync(string strXml, string UserID, string DocType, string Key, bool IsUpdate, object userState)
        {
            if ((this.CreateMarketingDocumentOperationCompleted == null))
            {
                this.CreateMarketingDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMarketingDocumentOperationCompleted);
            }
            this.InvokeAsync("CreateMarketingDocument", new object[] {
                    strXml,
                    UserID,
                    DocType,
                    Key,
                    IsUpdate}, this.CreateMarketingDocumentOperationCompleted, userState);
        }

        private void OnCreateMarketingDocumentOperationCompleted(object arg)
        {
            if ((this.CreateMarketingDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMarketingDocumentCompleted(this, new CreateMarketingDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMarketingDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMarketingDocument(string DocType, int DocEntry, string UserID)
        {
            object[] results = this.Invoke("GetMarketingDocument", new object[] {
                    DocType,
                    DocEntry,
                    UserID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetMarketingDocument(string DocType, int DocEntry, string UserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetMarketingDocument", new object[] {
                    DocType,
                    DocEntry,
                    UserID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetMarketingDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetMarketingDocumentAsync(string DocType, int DocEntry, string UserID)
        {
            this.GetMarketingDocumentAsync(DocType, DocEntry, UserID, null);
        }

        /// <remarks/>
        public void GetMarketingDocumentAsync(string DocType, int DocEntry, string UserID, object userState)
        {
            if ((this.GetMarketingDocumentOperationCompleted == null))
            {
                this.GetMarketingDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarketingDocumentOperationCompleted);
            }
            this.InvokeAsync("GetMarketingDocument", new object[] {
                    DocType,
                    DocEntry,
                    UserID}, this.GetMarketingDocumentOperationCompleted, userState);
        }

        private void OnGetMarketingDocumentOperationCompleted(object arg)
        {
            if ((this.GetMarketingDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarketingDocumentCompleted(this, new GetMarketingDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMarketingDocument_ReturnDS", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMarketingDocument_ReturnDS(string DocType, string DocEntry, string UserID)
        {
            object[] results = this.Invoke("GetMarketingDocument_ReturnDS", new object[] {
                    DocType,
                    DocEntry,
                    UserID});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetMarketingDocument_ReturnDS(string DocType, int DocEntry, string UserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetMarketingDocument_ReturnDS", new object[] {
                    DocType,
                    DocEntry,
                    UserID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet EndGetMarketingDocument_ReturnDS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetMarketingDocument_ReturnDSAsync(string DocType, int DocEntry, string UserID)
        {
            this.GetMarketingDocument_ReturnDSAsync(DocType, DocEntry, UserID, null);
        }

        /// <remarks/>
        public void GetMarketingDocument_ReturnDSAsync(string DocType, int DocEntry, string UserID, object userState)
        {
            if ((this.GetMarketingDocument_ReturnDSOperationCompleted == null))
            {
                this.GetMarketingDocument_ReturnDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarketingDocument_ReturnDSOperationCompleted);
            }
            this.InvokeAsync("GetMarketingDocument_ReturnDS", new object[] {
                    DocType,
                    DocEntry,
                    UserID}, this.GetMarketingDocument_ReturnDSOperationCompleted, userState);
        }

        private void OnGetMarketingDocument_ReturnDSOperationCompleted(object arg)
        {
            if ((this.GetMarketingDocument_ReturnDSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarketingDocument_ReturnDSCompleted(this, new GetMarketingDocument_ReturnDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CreateMarketingDocumentCompletedEventHandler(object sender, CreateMarketingDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMarketingDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CreateMarketingDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetMarketingDocumentCompletedEventHandler(object sender, GetMarketingDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarketingDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetMarketingDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetMarketingDocument_ReturnDSCompletedEventHandler(object sender, GetMarketingDocument_ReturnDSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarketingDocument_ReturnDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetMarketingDocument_ReturnDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}